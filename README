
It's a little silly to have no extension on this file, but it'll do for the moment.

Deitel's How to Program books (Java, C++, C#) have a couple exercises to emulate the other aspects of the programming environment. The first example is the VM that they call Simpletron. I sort of implemented it in Java some time ago, but lazily used only direct addressing. To incentivize learning Python, I am reimplementing it now.

ISA:
Accumulator, IR, PC connected to 100 member list of integers.

	STOP = 00
	READ = 10xx
	WRITE = 11xx
	ADD = 20xx
	SUBTR = 21xx
	MULTP = 22xx
	DIVIDE = 23xx
	GOTO = 30xx
	GOTOZERO = 31xx
	GOTONEG = 32xx
	LOAD = 40xx
(Where xx is the address of the indirected value of the instruction.)
Obviously, stop is unary. The math operations use the indirected value with whatever is in the accumulator.

In the near future, I will complete Deitel's exercises by creating a compiler, for the Simple language, to assemble into SML files.